INSERT INTO `_` (`id`, `query`, `active`, `notes`)
VALUES
	('get_price_id', 'select * from product_sale_price where `fk.id_product` = $id_product AND value = $value', '0', 'buat cek id harga'),
	('harga', 'SELECT\n    a.id_product, a.name, b.name AS \'type\',\n    c.value AS \"product_purchase_price\", c.`id_product_purchase_price` AS \'id_product_purchase_price\',\n    d.value AS \"product_sale_price\", d.`id_product_sale_price` AS \'id_product_sale_price\'\nFROM product AS a\rJOIN `level` AS b ON a.`fk.id_level` = b.`id_level`\rLEFT JOIN (\r    SELECT * FROM (\r        SELECT * FROM product_purchase_price WHERE active = \'1\' ORDER BY `datetime` DESC, `value` DESC\r    ) AS x GROUP BY `fk.id_product`\r) AS c ON a.`id_product` = c.`fk.id_product`\nLEFT JOIN (\r    SELECT * FROM (\r        SELECT * FROM product_sale_price WHERE active = \'1\' ORDER BY `datetime` DESC, `value` DESC\r    ) AS y GROUP BY `fk.id_product`\r) AS d ON a.`id_product` = d.`fk.id_product`\nWHERE a.`active` = \'1\'\nORDER BY `type`, b.`name`;', '0', 'harga jual & harga beli'),
	('purchase', 'SELECT DISTINCT(X.`fk.id_purchase`) AS \'id_purchase\' FROM (\n    SELECT\n        purchase_ex.`id_purchase_ex`, purchase_ex.`datetime`, purchase_ex.`fk.id_purchase`, purchase_ex.`fk.id_product`,\n        purchase_ex.`modifier`,\n        IF(ISNULL(purchase_ex.`qty` - purchase_bill_ex_.`sum_qty`), purchase_ex.`qty`, (purchase_ex.`qty` - purchase_bill_ex_.`sum_qty`))  AS \'qty\',\n        IF(ISNULL(purchase_bill_ex_.`sum_qty`), 0, purchase_bill_ex_.`sum_qty`)  AS \'sum_qty\',\n        purchase_ex.`fk.id_product_purchase_price`, purchase_ex.`discount`, purchase_ex.`void`, purchase_ex.`complimentary`, purchase_ex.`active`, purchase_ex.`notes`,\n        product.name AS \'name_product\', product_purchase_price.`value`AS \'harga_beli\'\n    FROM purchase_ex\n    LEFT JOIN product ON purchase_ex.`fk.id_product` = product.`id_product`\n    LEFT JOIN product_purchase_price ON purchase_ex.`fk.id_product_purchase_price` = product_purchase_price.`id_product_purchase_price`\n    LEFT JOIN (SELECT *, sum(`qty`) AS \'sum_qty\' FROM purchase_bill_ex WHERE `active` = \'1\' GROUP BY `fk.id_purchase_ex`, `fk.id_product_purchase_price`) AS purchase_bill_ex_\n        ON purchase_ex.`id_purchase_ex` = purchase_bill_ex_.`fk.id_purchase_ex`\n    WHERE purchase_ex.`active` = \'1\'\n) AS X JOIN purchase ON purchase.`id_purchase` = X.`fk.id_purchase` WHERE purchase.`pic` = $id_supplier AND X.`qty` > 0 ORDER BY X.`fk.id_purchase`;', '0', 'clean join with product & product_purchase_price'),
	('purchase_bill', 'SELECT DISTINCT(X.`fk.id_purchase_bill`) FROM (\n    SELECT\n        SUM(`qty`) AS qty, IF(isNULL(pR.`sum_qty`), 0, pR.`sum_qty`) AS qty_,\n        IF(isNULL(SUM(`qty`) - IF(isNULL(pR.`sum_qty`), 0, pR.`sum_qty`)), 0, (SUM(`qty`) - IF(isNULL(pR.`sum_qty`), 0, pR.`sum_qty`))) AS available,\n        pBX.`id_purchase_bill_ex`, pBX.`fk.id_purchase_bill`, pBX.`fk.id_purchase_ex`, pBX.`fk.id_product_purchase_price`, pBX.`complimentary`, pBX.`tax_percent`, pBX.`tax_amount`, pBX.`service_percent`, pBX.`service_amount`,\n        pBX.`discount_percent`, pBX.`discount_amount`, pBX.`active`, pBX.`notes`, pBX.`update`\n    FROM\n        purchase_bill_ex AS pBX\n    LEFT JOIN (\n        SELECT\n            pRX.`fk.id_purchase_bill_ex`, SUM(pRX.qty) AS sum_qty\n        FROM\n            purchase_return_ex AS pRX\n        JOIN\n            purchase_return AS pR ON pR.`id_purchase_return` = pRX.`fk.id_purchase_return`\n        WHERE\n            pR.`active`=\'1\' AND pRX.`active` = \'1\'\n        GROUP BY\n            pRX.`fk.id_purchase_bill_ex`\n        ORDER BY\n            pRX.`fk.id_purchase_return`, pRX.`fk.id_purchase_bill_ex`\n    ) AS pR ON pR.`fk.id_purchase_bill_ex` = pBX.`id_purchase_bill_ex`\n    WHERE\n        pBX.`active` = \'1\'\n    GROUP BY\n        pBX.`fk.id_purchase_bill`, pBX.`fk.id_product_purchase_price`\n    ORDER BY\n        pBX.`fk.id_purchase_bill`, pBX.`id_purchase_bill_ex`\n) AS X WHERE X.available > 0;', '0', NULL),
	('purchase_bill_ex', 'SELECT Z.`name` AS name_product, Z.`id_product`, Y.`value` AS harga_beli, X.*\nFROM (\n    SELECT\n        SUM(`qty`) AS qty, IF(isNULL(pR.`sum_qty`), 0, pR.`sum_qty`) AS qty_,\n        IF(isNULL(SUM(`qty`) - IF(isNULL(pR.`sum_qty`), 0, pR.`sum_qty`)), 0, (SUM(`qty`) - IF(isNULL(pR.`sum_qty`), 0, pR.`sum_qty`))) AS available,\n        pBX.`id_purchase_bill_ex`, pBX.`fk.id_purchase_bill`, pBX.`fk.id_purchase_ex`, pBX.`fk.id_product_purchase_price`, pBX.`complimentary`, pBX.`tax_percent`, pBX.`tax_amount`, pBX.`service_percent`, pBX.`service_amount`,\n        pBX.`discount_percent`, pBX.`discount_amount`, pBX.`active`, pBX.`notes`, pBX.`update`\n    FROM\n        purchase_bill_ex AS pBX\n    LEFT JOIN (\n        SELECT\n            pRX.`fk.id_purchase_bill_ex`, SUM(pRX.qty) AS sum_qty\n        FROM\n            purchase_return_ex AS pRX\n        JOIN\n            purchase_return AS pR ON pR.`id_purchase_return` = pRX.`fk.id_purchase_return`\n        WHERE\n            pR.`active`=\'1\' AND pRX.`active` = \'1\'\n        GROUP BY\n            pRX.`fk.id_purchase_bill_ex`\n        ORDER BY\n            pRX.`fk.id_purchase_return`, pRX.`fk.id_purchase_bill_ex`\n    ) AS pR ON pR.`fk.id_purchase_bill_ex` = pBX.`id_purchase_bill_ex`\n    WHERE\n        pBX.`active` = \'1\'\n    GROUP BY\n        pBX.`fk.id_purchase_bill`, pBX.`fk.id_product_purchase_price`\n    ORDER BY\n        pBX.`fk.id_purchase_bill`, pBX.`id_purchase_bill_ex`\n) AS X\nJOIN `product_purchase_price` AS Y ON Y.`id_product_purchase_price` = X.`fk.id_product_purchase_price`\nJOIN `product` AS Z ON Z.`id_product` = Y.`fk.id_product`\nWHERE X.available > 0 AND X.`fk.id_purchase_bill` = $id_purchase_bill;', '0', NULL),
	('purchase_ex', 'SELECT X.* FROM (\n    SELECT\n        purchase_ex.`id_purchase_ex`, purchase_ex.`datetime`, purchase_ex.`fk.id_purchase`, purchase_ex.`fk.id_product`,\n        purchase_ex.`modifier`,\n        IF(ISNULL(purchase_ex.`qty` - purchase_bill_ex_.`sum_qty`), purchase_ex.`qty`, (purchase_ex.`qty` - purchase_bill_ex_.`sum_qty`))  AS \'qty\',\n        IF(ISNULL(purchase_bill_ex_.`sum_qty`), 0, purchase_bill_ex_.`sum_qty`)  AS \'sum_qty\',\n        purchase_ex.`fk.id_product_purchase_price`, purchase_ex.`discount`, purchase_ex.`void`, purchase_ex.`complimentary`, purchase_ex.`active`, purchase_ex.`notes`,\n        product.name AS \'name_product\', product_purchase_price.`value`AS \'harga_beli\'\n    FROM purchase_ex\n    LEFT JOIN product ON purchase_ex.`fk.id_product` = product.`id_product`\n    LEFT JOIN product_purchase_price ON purchase_ex.`fk.id_product_purchase_price` = product_purchase_price.`id_product_purchase_price`\n    LEFT JOIN (SELECT *, sum(`qty`) AS \'sum_qty\' FROM purchase_bill_ex WHERE `active` = \'1\' GROUP BY `fk.id_purchase_ex`, `fk.id_product_purchase_price`) AS purchase_bill_ex_\n        ON purchase_ex.`id_purchase_ex` = purchase_bill_ex_.`fk.id_purchase_ex`\n    WHERE purchase_ex.`fk.id_purchase` = $id_purchase AND purchase_ex.`active` = \'1\' AND !isNULL(purchase_ex.`fk.id_purchase`)\n) AS X WHERE X.`qty` > 0 ORDER BY X.`fk.id_purchase`;', '0', 'join with product & product_purchase_price'),
	('stock', 'SELECT \n    ppp.`fk.id_product` AS `code`, p.name, pb.ippp, ppp.value,\n    SUM(pb.qty) AS qty_p, SUM(IF(ISNULL(pr.qty), 0, pr.qty)) AS qty_r,\n    SUM(pb.qty - IF(ISNULL(pr.qty), 0, pr.qty)) AS qty,\n    pb.ipx, pb.ipb, DATE(pb.datetime) AS ipb_date, pb.ipbx, pr.ipr, DATE(pr.datetime) AS ipr_date\nFROM (\n    SELECT\n        pb.`datetime`, pbx.`fk.id_purchase_ex` AS ipx, pb.`id_purchase_bill` AS ipb,\n        pbx.`id_purchase_bill_ex` AS ipbx, pbx.`fk.id_product_purchase_price` AS ippp, pbx.`qty`\n    FROM purchase_bill AS pb\n    JOIN purchase_bill_ex pbx ON pb.`id_purchase_bill` = pbx.`fk.id_purchase_bill`\n    WHERE pb.`active`=\'1\' AND pbx.`active` = \'1\'\n) AS pb\nLEFT JOIN (\n    SELECT\n        pr.`DATETIME`, prx.`fk.id_purchase_bill_ex` AS ipbx, pr.`id_purchase_return` AS ipr,\n        prx.`id_purchase_return_ex` AS iprx, SUM(prx.`qty`) AS `qty`\n    FROM purchase_return AS pr\n    JOIN purchase_return_ex AS prx ON pr.`id_purchase_return` = prx.`fk.id_purchase_return`\n    WHERE pr.`active`=\'1\' AND prx.`active` = \'1\'\n    GROUP BY ipbx\n) AS pr ON pr.ipbx = pb.ipbx\nJOIN product_purchase_price AS ppp ON ppp.`id_product_purchase_price` = pb.ippp\nJOIN product AS p ON p.`id_product` = ppp.`fk.id_product`\nWHERE pb.datetime >= $start\nGROUP BY pb.ippp;', '0', NULL),
	('supplier', 'SELECT\n    supplier.`id_supplier`, supplier_group.`id_supplier_group`, supplier_group.`name` AS \'name_supplier_group\',\n    branch.`id_branch`, branch.`name` AS \'name_branch\',\n    contact.`id_contact`, contact.`user_name`, contact.`first_name`, contact.`last_name`, contact.`alias` AS \'alias\', contact_addr.`address`, city.`name` AS \'city\'\nFROM supplier\nLEFT JOIN contact ON supplier.`fk.id_contact` = contact.`id_contact`\nLEFT JOIN contact_addr ON contact.`id_contact` = contact_addr.`fk.id_contact`\nLEFT JOIN city ON contact_addr.`fk.id_city` = city.`id_city`\nLEFT JOIN supplier_group ON supplier_group.`id_supplier_group` = supplier.`fk.id_supplier_group`\nLEFT JOIN branch ON branch.`id_branch` = supplier.`fk.id_branch`\nWHERE supplier.`active` = \'1\' AND supplier_group.`active` = \'1\' AND branch.`active` = \'1\' AND contact_addr.`active` = \'1\';', '0', NULL),
	('_', 'SELECT * FROM product WHERE id_product LIKE concat(\'%\', $id_product, \'%\');', '0', NULL);